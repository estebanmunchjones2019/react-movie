{"version":3,"sources":["components/elements/NotFound/NotFound.js","config.js","components/elements/Navigation/Navigation.js","components/elements/MovieThumb/MovieThumb.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/Actor/Actor.js","components/elements/Spinner/Spinner.js","components/Movie/Movie.js","components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/Home/Home.js","components/App/App.js","index.js"],"names":["NotFound","API_URL","API_KEY","IMAGE_BASE_URL","Navigation","movie","className","to","MovieThumb","movieId","movieName","image","pathname","src","alt","propTypes","PropTypes","string","clickable","bool","FontAwesome","name","size","MovieInfo","directors","style","background","backdrop_path","poster_path","title","overview","min","max","optimum","low","high","value","vote_average","length","map","element","i","key","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","FourColGrid","children","header","loading","Actor","actor","profile_path","character","Spinner","Movie","state","actors","fetchItems","endpoint","a","props","match","params","fetch","json","movieResult","status_code","setState","creditsEndpoint","creditsResults","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","console","log","this","getItem","parse","location","runtime","false","React","Component","Header","HeroImage","text","SearchBar","timeOut","doSearch","event","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","LoadMoreBtn","onClick","Home","movies","heroImage","currentPage","totalPages","searchTerm","createEndpoint","loadMore","updateItems","fetchitems","moviesResults","results","page","total_pages","original_title","id","func","number","prototypes","Route","protoTypes","path","component","instanceOf","exact","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f3eea24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotFound = () =>{\r\n    return (\r\n        <div>\r\n            <h1>Whooops. The page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b62cdac89fb1847cd3615bc33e45dc33';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ movie }) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                 <p>Home</p>\r\n                </Link>\r\n                <p>{movie}</p>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ movieId, movieName, image}) =>{\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            <Link to={{ pathname: `/${movieId}`, movieName:`${movieName}`}}>\r\n                <img src={image} alt=\"moviethumb\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = ({ movie, directors }) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n        style={{\r\n            background: movie.backdrop_path ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path})`\r\n            : '#000'\r\n        }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb \r\n                        image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path }`\r\n                        : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                    <div className=\"rmdb-movieinfo-text\">\r\n                        <h1>{movie.title}</h1>\r\n                        <h3>PLOT</h3>\r\n                        <p>{movie.overview}</p>\r\n                        <h3>IMDB RATING</h3>\r\n                        <div className=\"rmdb-rating\">\r\n                            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={movie.vote_average * 10}></meter>\r\n                            <p className=\"rmdb-score\">{movie.vote_average}</p>\r\n                        </div>\r\n                        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                        {directors.map((element, i) => {\r\n                            return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                        })}\r\n                    </div>\r\n                    <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    clickable: PropTypes.bool\r\n}\r\n\r\nFontAwesome.propTypes = {\r\n    name: PropTypes.string,\r\n    size: PropTypes.string\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}\n","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFontAwesome.propTypes = {\r\n    name: PropTypes.string,\r\n    size: PropTypes.string\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = ({ children, header, loading }) => {\r\n    \r\n    const renderElements = ()=> { \r\n        const gridElements = children.map((element, i)=>{\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        });\r\n        return gridElements;\r\n    } \r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {header && !loading ? <h1>{header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst POSTER_SIZE = 'w154';\r\n\r\nconst Actor = ({ actor }) => {\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : './images/no_image.jpg'}\r\n            alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Actor;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () =>{\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n\r\nclass Movie extends React.Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { movieId } = this.props.match.params;\r\n        if (localStorage.getItem(`${movieId}`)) {\r\n            const state = JSON.parse(localStorage.getItem(`${movieId}`));\r\n            this.setState({...state});\r\n        } else {\r\n            this.setState({ loading: true });\r\n            //first fetch the movie\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n            this.fetchItems(endpoint);\r\n        }\r\n        \r\n    }\r\n\r\n    fetchItems = async (endpoint) => {\r\n        const { movieId } = this.props.match.params;\r\n        try {\r\n            const movieResult = await (await fetch(endpoint)).json();\r\n            if (movieResult.status_code){\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ movie: movieResult }, async () => {\r\n                    //fetch the actors and directors\r\n                    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                    const creditsResults = await (await fetch(creditsEndpoint)).json();\r\n                    const directors = creditsResults.crew.filter((member) => member.job === \"Director\");\r\n                    this.setState({\r\n                        actors: creditsResults.cast,\r\n                        directors,\r\n                        loading: false\r\n                    }, () => {\r\n                        localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\r\n                    })\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(`Error: ${err}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movie, actors, directors, loading } = this.state;\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={movie} directors={directors}/>\r\n                        <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue}/>\r\n                </div>\r\n                : null }\r\n\r\n                {actors ?\r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                : null }\r\n\r\n                {!actors && loading.false ? <h1>No movie found!</h1> : null}\r\n                {loading ? <Spinner /> : null }       \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"mrdb-logo\" />\r\n                </Link>\r\n                \r\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"mrdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    to: PropTypes.string\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background:\r\n                `linear-gradient(to bottom, \r\n                rgba(0,0,0,0) 39%, \r\n                rgba(0,0,0,0) 41%, \r\n                rgba(0,0,0,0.65) 100%),\r\n                url('${image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeOut = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({value: event.target.value});\r\n        clearTimeout(this.timeOut);\r\n\r\n        this.timeOut = setTimeout(() => {\r\n            this.props.callback(false, this.state.value);\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input\r\n                        type=\"text\" \r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}></input>\r\n                </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nFontAwesome.propTypes = {\r\n    name: PropTypes.string,\r\n    size: PropTypes.string\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = ({ onClick, text }) => {\r\n    return (                                                                //I can't type onClick={onClick(true, \"\")} because it's creates an infinite loop when a component inside render() has a call to this.setState(). It just needs a anonymous callback and return the call to that function\r\n        <div className=\"rmdb-loadmorebtn\" onClick={ () => {onClick(true)}}> \r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport './Home.css';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('HomeState')) {\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({...state});\r\n        } else {\r\n            this.setState({loading:true});\r\n            this.fetchitems(this.createEndpoint('movie/popular', false, \"\"));\r\n        }\r\n    }\r\n\r\n    createEndpoint = (type, loadMore, searchTerm) => {\r\n        return `${API_URL}${type}?api_key=${API_KEY}&page=\r\n            ${loadMore && this.state.currentPage + 1}&query=${searchTerm}`;\r\n      }\r\n\r\n    updateItems = (loadMore, searchTerm) => {\r\n        if (localStorage.getItem(searchTerm)) {\r\n            const state = JSON.parse(localStorage.getItem(searchTerm));\r\n            this.setState({...state});\r\n        } else {\r\n            this.setState({\r\n                movies: loadMore ? [...this.state.movies] : [],\r\n                loading: true,\r\n                searchTerm: loadMore ? this.state.searchTerm : searchTerm\r\n            }, () => {\r\n                this.fetchitems(\r\n                    !this.state.searchTerm ?\r\n                    this.createEndpoint('movie/popular', loadMore, \"\") : // or I can put searchTerm \"\", but the state has that empty string as well\r\n                    this.createEndpoint('search/movie', loadMore, this.state.searchTerm)\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    fetchitems = async (endpoint) => {\r\n        const { movies, heroImage, searchTerm } = this.state;\r\n        try {\r\n            const moviesResults = await (await fetch(endpoint)).json();\r\n            this.setState({\r\n                movies: [...movies, ...moviesResults.results],\r\n                heroImage: heroImage || moviesResults.results[0],\r\n                loading: false,\r\n                currentPage: moviesResults.page,\r\n                totalPages: moviesResults.total_pages\r\n                }, () => {\r\n                    if ( searchTerm === '' ) {\r\n                        localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n                    } else {\r\n                        localStorage.setItem(`${searchTerm}`, JSON.stringify(this.state));\r\n                    }\r\n            })\r\n        } catch (err) {\r\n            console.log(`Error: err`);\r\n        }\r\n    }   \r\n\r\n    render() {\r\n        const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\r\n        return (\r\n            <div className=\"imdb-home\">\r\n                {heroImage && !searchTerm? \r\n                <div>\r\n                    <HeroImage\r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                        title={`${heroImage.original_title}`}\r\n                        text={`${heroImage.overview}`}\r\n                    />\r\n                </div> : null }\r\n                <SearchBar callback={this.updateItems}/>\r\n                <div className=\"mrdb-home-grid\">\r\n                    <FourColGrid \r\n                        header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={loading}\r\n                    >\r\n                    {movies.map((element, i)=>{\r\n                        return <MovieThumb \r\n                                    key={i}\r\n                                    clickable={true}\r\n                                    image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                    movieId={element.id}\r\n                                    movieName={element.original_title}\r\n                                />\r\n                        })}\r\n                    </FourColGrid>\r\n                    {loading ? <Spinner /> : null}\r\n                    {currentPage < totalPages && !loading ?\r\n                <LoadMoreBtn text=\"Load More\" onClick={this.updateItems} /> \r\n                : null }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    callback: PropTypes.func,\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    clickable: PropTypes.bool,\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nLoadMoreBtn.prototypes = {\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\nimport Movie from '../Movie/Movie';\r\nimport Header from '../elements/Header/Header';\r\nimport PropTypes from 'prop-types';\r\nimport Home from '../Home/Home';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" component={Home} exact />\r\n                        <Route path=\"/:movieId\" component={Movie} exact />\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nRoute.protoTypes = {\r\n    path: PropTypes.string,\r\n    component: PropTypes.instanceOf(Movie),\r\n    exact: PropTypes.bool\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}